{"version":3,"sources":["layout/Calculator/Screen/ResultScreen/ResultScreen.js","layout/Calculator/Screen/ComputationScreen/ComputationScreen.js","layout/Calculator/Screen/ApproximationScreen/ApproximationScreen.js","layout/Calculator/Screen/Screen.js","layout/Calculator/Keypad/KeypadRow/KeypadRow.js","components/Button/Button.js","layout/Calculator/Keypad/Keypad.js","layout/Calculator/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["resultScreen","props","className","children","computationScreen","approximationScreen","screen","ComputationScreen","equation","ResultScreen","result","ApproximationScreen","approximation","keypadRow","button","classes","type","push","join","onClick","onButtonPress","keypad","KeypadRow","Button","Calculator","useState","setEquation","setResult","setApproximation","mode","setMode","setCurrentScreen","s","lastChar","length","getCurrentScreen","appendCurrentScreen","Screen","Keypad","event","pressedButton","target","innerHTML","indexOf","console","log","equationResult","evaluate","replace","error","alert","diff","Math","abs","parseFloat","diffProportion","approximationIsCloseEnough","substr","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.1bbcf0c4.chunk.js","sourcesContent":["import React from 'react';\n\nconst resultScreen = (props) => (\n  <div className=\"result-screen\">\n    {props.children}\n  </div>\n);\n\nexport default resultScreen;\n","import React from 'react';\n\nconst computationScreen = (props) => (\n  <div className=\"computation-screen selected\">\n    {props.children}\n  </div>\n);\n\nexport default computationScreen;","import React from 'react';\n\nconst approximationScreen = (props) => (\n  <div className=\"approximation-screen\">\n    {props.children}\n  </div>\n);\n\nexport default approximationScreen;\n","import React from 'react';\nimport ResultScreen from './ResultScreen/ResultScreen'\nimport ComputationScreen from './ComputationScreen/ComputationScreen'\nimport ApproximationScreen from './ApproximationScreen/ApproximationScreen'\n\nconst screen = (props) => (\n  <section className=\"screen\">\n    <ComputationScreen>{props.equation}</ComputationScreen>\n    <ResultScreen>{props.result}</ResultScreen>\n    <ApproximationScreen>{props.approximation}</ApproximationScreen>\n  </section>\n);\n\nexport default screen;","import React from 'react';\n\nconst keypadRow = (props) => (\n  <div className=\"keypad__row\">\n    {props.children}\n  </div>\n);\n\nexport default keypadRow;","import React from 'react';\n\nconst button = (props) => {\n  const classes = ['btn'];\n\n  if(props && props.type) {\n    classes.push('btn--' + props.type);\n  }\n\n  return (\n    <button className={classes.join(' ')} onClick={props.onButtonPress}>\n      {props.children}\n    </button>\n  );\n}\n\nexport default button;","import React from 'react';\nimport KeypadRow from './KeypadRow/KeypadRow';\nimport Button from '../../../components/Button/Button';\n\nconst keypad = (props) => (\n  <section className=\"keypad\">\n    <KeypadRow>\n      <Button onButtonPress={props.onButtonPress}>C</Button>\n      <Button onButtonPress={props.onButtonPress}>&larr;</Button>\n      <Button onButtonPress={props.onButtonPress}>%</Button>\n      <Button onButtonPress={props.onButtonPress}>/</Button>\n    </KeypadRow>\n\n    <KeypadRow>\n      <Button onButtonPress={props.onButtonPress}>7</Button>\n      <Button onButtonPress={props.onButtonPress}>8</Button>\n      <Button onButtonPress={props.onButtonPress}>9</Button>\n      <Button onButtonPress={props.onButtonPress}>×</Button>\n    </KeypadRow>\n\n    <KeypadRow>\n      <Button onButtonPress={props.onButtonPress}>4</Button>\n      <Button onButtonPress={props.onButtonPress}>5</Button>\n      <Button onButtonPress={props.onButtonPress}>6</Button>\n      <Button onButtonPress={props.onButtonPress}>-</Button>\n    </KeypadRow>\n\n    <KeypadRow>\n      <Button onButtonPress={props.onButtonPress}>1</Button>\n      <Button onButtonPress={props.onButtonPress}>2</Button>\n      <Button onButtonPress={props.onButtonPress}>3</Button>\n      <Button onButtonPress={props.onButtonPress}>+</Button>\n    </KeypadRow>\n\n    <KeypadRow>\n      <Button onButtonPress={props.onButtonPress}>0</Button>\n      <Button onButtonPress={props.onButtonPress}>.</Button>\n      <Button onButtonPress={props.onButtonPress} type=\"large\">Enter</Button>\n    </KeypadRow>\n\n  </section>\n);\n\nexport default keypad;","import React, { useState } from 'react';\nimport { evaluate } from 'mathjs';\nimport Screen from './Screen/Screen';\nimport Keypad from './Keypad/Keypad';\n\nfunction Calculator() {\n  const [equation, setEquation] = useState('');\n  const [result, setResult] = useState('0');\n  const approxPrompt = '(Enter an approximation)';\n  const [approximation, setApproximation] = useState('');\n  /*\n    Mode can be one of these strings:\n    EnterintEquation\n    EnteringApproximation\n    Finished\n  */\n  const [mode, setMode] = useState('EnteringEquation');\n\n  const setCurrentScreen = (s) => {\n    if(mode==='EnteringEquation') {\n      setEquation(s);\n    } else if (mode === 'EnteringApproximation') {\n      let lastChar = s[s.length-1];\n      if(s.length === 0 || (lastChar >= '0' && lastChar <= '9') || lastChar === '.') {\n        setApproximation(s);\n      }\n    } else if (mode === 'Finished') {\n      setEquation(s);\n    }\n  };\n\n  const getCurrentScreen = () => {\n    if(mode==='EnteringEquation') {\n      return equation;\n    } else if (mode === 'EnteringApproximation') {\n      return approximation;\n    } else if (mode === 'Finished') {\n      return equation;\n    }\n  };\n\n  const appendCurrentScreen = (s) => {\n    setCurrentScreen(getCurrentScreen() + s);\n  };\n\n  const approximationIsCloseEnough = () => {\n    console.log('close enough?');\n    let equationResult = evaluate(equation.replace('×', '*'));\n    let diff = Math.abs(parseFloat(approximation) - equationResult);\n    console.log('diff:', diff);\n    if (diff <= 1) {\n      return true;\n    }\n    let diffProportion = Math.abs(diff/equationResult);\n    console.log('diffProportion:', diffProportion);\n    if(diffProportion < 0.15) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const onButtonPress = event => {\n    const pressedButton = event.target.innerHTML;\n    if (pressedButton === 'C') {\n      setCurrentScreen('');\n    }\n    else if ((pressedButton >= '0' && pressedButton <= '9') || pressedButton === '.') {\n      appendCurrentScreen(pressedButton);\n    }\n    else if (['+', '-', '*', '×', '/', '%'].indexOf(pressedButton) !== -1) appendCurrentScreen(' ' + pressedButton + ' ');\n    else if (pressedButton === 'Enter') {\n      console.log('mode:', mode);\n      if (mode === 'EnteringEquation') {\n        setMode('EnteringApproximation');\n        setApproximation(approxPrompt);\n      } else if (mode === 'EnteringApproximation') {\n        let equationResult;\n        try {\n          equationResult = evaluate(equation.replace('×', '*'));\n        } catch (error) {\n          alert('Invalid Mathematical Equation');\n        }\n        if(approximationIsCloseEnough()) {\n          setResult(equationResult);\n          setMode(\"Finished\");\n        }\n      }\n    }\n    else {\n      setCurrentScreen(getCurrentScreen().substr(0, equation.length - 1));\n    }\n  }\n\n  return (\n    <main className=\"calculator\">\n      <Screen equation={equation} result={result} approximation={approximation}/>\n      <Keypad onButtonPress={onButtonPress}/>\n    </main>\n  )\n}\n\nexport default Calculator;","import React from 'react';\nimport './styles/styles.css';\nimport Calculator from './layout/Calculator/Calculator';\n\nconst app = () => (\n  <div className=\"app\">\n    <Calculator />\n  </div>\n)\n\nexport default app;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}